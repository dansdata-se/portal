CREATE TABLE "profiles"."organizations" (
  "id" uuid NOT NULL DEFAULT NULL, -- Generated by trigger
  "name" text NOT NULL CHECK (is_strlen (name, 1, 50) AND is_singleline (name)),
  "email" text CHECK (is_strlen (email, 3, 320) AND is_singleline (email)),
  "phone" text CHECK (is_strlen (phone, 5, 20) AND is_singleline (phone))
);

COMMENT ON COLUMN "profiles"."organizations"."id" IS 'Corresponds to "profiles"."profiles". Automatically generated on insertion';

ALTER TABLE "profiles"."organizations" ENABLE ROW LEVEL SECURITY;

CREATE UNIQUE INDEX organizations_pkey ON profiles.organizations USING btree (id);

ALTER TABLE "profiles"."organizations"
  ADD CONSTRAINT "organizations_pkey" PRIMARY KEY USING INDEX "organizations_pkey";

ALTER TABLE "profiles"."organizations"
  ADD CONSTRAINT "profile_organizations_id_fkey" FOREIGN KEY (id) REFERENCES profiles.profiles (id) ON DELETE CASCADE NOT valid;

ALTER TABLE "profiles"."organizations" validate CONSTRAINT "profile_organizations_id_fkey";

CREATE TRIGGER "profiles_organizations_create_associated_profile_trigger"
  BEFORE INSERT ON "profiles"."organizations"
  FOR EACH ROW
  EXECUTE PROCEDURE "profiles"."create_associated_profile" ();

CREATE TRIGGER "profiles_organizations_delete_associated_profile_trigger"
  AFTER DELETE ON "profiles"."organizations"
  FOR EACH ROW
  EXECUTE PROCEDURE "profiles"."delete_associated_profile" ();

